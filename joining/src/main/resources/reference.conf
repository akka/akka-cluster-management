akka {
  cluster.bootstrap {

    contact-point-discovery {

      # define this name to be looked up in service discovery for "neighboring" nodes
      # if undefined, the name will be extracted from the ActorSystem name
      service-name = null

      # the effective service name is the exact string that will be used to perform service discovery
      # usually, this means the service-name being suffixed with an additional namespace (e.g. "name.default"
      effective-service-name = null

      # Config path of discovery method to be used to locate the initial contact points.
      # It must be a fully qualified config path to the discovery's config section.
      discovery-method = akka.discovery.dns-srv

      # Amount of time for which a discovery observation must remain "stable"
      # (i.e. not change list of discovered contact-points) before a join decision can be made.
      # This is done to decrease the likelyhood of performing decisions on fluctuating observations.
      stable-margin = 3 seconds
    }

    # configured how we communicate with the contact point once it is discovered
    contact-point {

      # only http supported currently
      protocol = http

      # if no port is discovered along with the host/ip of a contact point this port will be used as fallback
      fallback-port = 8558 # port pun, it "complements" 2552 which is often used for Akka remoting

      # interval at which contact points should be polled
      # the effective interval used is this value plus the same value multiplied by the jitter value
      probe-interval = 1 second

      # max amount of jitter to be added on retries
      probe-interval-jitter = 0.3
    }
  }
}

akka.discovery {

  dns-srv {
    class = akka.discovery.DnsSrvServiceDiscovery

    resolve-interval = 1 second

    resolve-timeout = 2 second
  }
}
