######################################################
# Akka Service Discovery Marathon API Config         #
######################################################

akka.discovery {
  # Set the following in your application.conf if you want to use this discovery mechanism:
  # method = marathon-api
  # ApiMayChange
  marathon-api {
    class = akka.discovery.marathon.MarathonApiServiceDiscovery

    # URL for getting list of apps from Marathon. Verified on OSS DC/OS 1.8, 1.9
    # TODO: Future improvement would be keys for auth token, CA cert
    app-api-url = "http://marathon.mesos:8080/v2/apps"

    # Only used in the case that Lookup.portName is not set. Bootstrap sets this from
    # akka.management.cluster.boostrap.contact-point-discovery.port-name
    app-port-name = "akkamgmthttp"

    # Used to find other apps running by Marathon. This will be passed as the label query string parameter
    # to the apps-api-url defined above.
    # `%s` will be replaced with the configured effective name, which defaults to the actor system name
    app-label-query = "ACTOR_SYSTEM_NAME==%s"

    authentication {
      # Define authentication type as one of:
      # - none - no authentication will be perormed,
      # - user - authentication based on username and password
      # - service - authatnication based on service account ID, private key and asymetric encryption algorithm
      #             (JWT token)
      #             {
      #               "typ": "JWT",
      #               "alg": "[RS256|RS384|RS512|ES256|ES384|"ES512]"
      #             }.{
      #               "uid": "${service-account-id}",
      #               "iat":
      #               "exp":
      #             }.SIGNATURE
      type="none"

      # This endpoint accepts either a user ID and password (for a user account)
      # or a service account ID and a service login token.
      # If the credentials are validated, it returns an authentication token.
      login-url = "http://master.mesos/acs/api/v1/auth/login"

      # Service's account ID in case of service based authentication
      service-account-id = ""

      # Algorithm used to sign JWT token for authentication:
      # - "RS256" - SHA256withRSA,
      # - "RS384" - SHA384withRSA,
      # - "RS512" - SHA512withRSA,
      # - "ES256" - SHA256withECDSA,
      # - "ES384" - SHA384withECDSA,
      # - "ES512" - SHA512withECDSA
      algorithm = ""

      # Service's private key in case of service based authentication (base64 encoded)
      private-key = ""

      # User's name in case of user based authentication
      username = ""

      # User's password in case of user based authentication
      password = ""

      # Expiry date in seconds (exp) from issued at (iat) time
      expiry = 60
    }
  }
}
