######################################################
# Akka Service Discovery Kubernetes API Config       #
######################################################

akka.discovery {
  # Set the following in your application.conf if you want to use this discovery mechanism:
  # method = kubernetes-api

  kubernetes-api {
    class = akka.discovery.kubernetes.KubernetesApiSimpleServiceDiscovery

    # API server, cert and token information. Currently these are present on K8s versions: 1.6, 1.7, 1.8, and perhaps more
    api-ca-path = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    api-token-path = "/var/run/secrets/kubernetes.io/serviceaccount/token"
    api-service-host-env-name = "KUBERNETES_SERVICE_HOST"
    api-service-port-env-name = "KUBERNETES_SERVICE_PORT"

    # Namespace to query for pods
    pod-namespace = "default"

    # Picks up namespace from $NAMESPACE env var if set. Add the following to the container spec to avoid having to
    # hard code this
    # env:
    # - name: NAMESPACE
    #   valueFrom:
    #    fieldRef:
    #     fieldPath: metadata.namespace
    pod-namespace = ${?NAMESPACE}

    # Domain of the k8s cluster
    pod-domain = "cluster.local"

    # Selector value to query pod API with.
    # `%s` will be replaced with the configured effective name, which defaults to the actor system name
    pod-label-selector = "app=%s"

    # Only used in the case that Lookup.portName is not set. Bootstrap sets this from
    # akka.management.cluster.boostrap.contact-point-discovery.port-name
    pod-port-name = "management"
  }
}
