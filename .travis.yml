version: ~> 1.0
sudo: required
dist: xenial
addons:
  apt:
    packages:
    - conntrack
language: scala

git:
  depth: 500 # to make sure we have enough depth to power git describe for sbt-dynver (used for snapshot version numbers)

before_install:
  # make comparing to origin/master work
  - git remote set-branches --add origin master && git fetch
  # using jabba for custom jdk management
  - curl -sL https://git.io/jabba | bash && . ~/.jabba/jabba.sh
  - jabba install adopt@1.8-0
  - jabba install adopt@1.11-0

script:
  - jabba use ${JDK:=adopt@1.8-0}
  - java -version
  - sbt -jvm-opts .jvmopts-travis "$CMD"

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.m2/repository # for Maven-based integration tests
    - $HOME/.sbt
    - $HOME/.jabba/jdk

before_script:
  - unset _JAVA_OPTIONS

jobs:
  include:
  - stage: test
    script:
    - jabba use "adopt@1.8-0"
    - git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH"
    - sbt -jvm-opts .jvmopts-travis ";scalafmtCheckAll;+Test/compile; mimaReportBinaryIssues; docs/paradox"
    name: "Compile on all Scala versions, check code style (fixed with `sbt Test/compile`), run Mima"

  - env: CMD="+test"
    name: "Run tests on AdoptOpenJDK 8 (all Scala versions)"

  - env:
    - JDK="adopt@1.11-0"
    - CMD="+test"
    name: "Run tests on AdoptOpenJDK 11 (all Scala versions)"

  - stage: integration
    script: ./scripts/setup-minikube-for-linux.sh && ./integration-test/kubernetes-api/test.sh
    name: "Integration test for Kubernetes API"

  - script:
    - ./scripts/setup-minikube-for-linux.sh && ./integration-test/kubernetes-dns/test.sh
    name: "Integration test for Kubernetes DNS"

  - script: ./scripts/setup-minikube-for-linux.sh && ./integration-test/kubernetes-api-java/test.sh
    name: "Integration test for Kubernetes API with maven"
    # The cron build compiles against Akka 2.6 and Akka HTTP 10.2, but the Maven example uses 2.5 and 10.1
    # see https://github.com/akka/akka-management/issues/744
    if: type != cron

  - script:
      - ./scripts/setup-minikube-for-linux.sh
      - kubectl create namespace lease
      - kubectl apply -f ./lease-kubernetes/lease.yml
      - kubectl proxy --port=8080 &
      - sbt ";lease-kubernetes / it:test "
      - ./lease-kubernetes-int-test/minikube-test.sh
    name: "Kubernetes Lease Integration tests"


  - stage: whitesource
    script:
      - jabba use "adopt@1.8-0"
      - git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH" && sbt 'set credentials += Credentials("whitesource", "whitesourcesoftware.com", "", System.getenv("WHITESOURCE_KEY"))' whitesourceCheckPolicies whitesourceUpdate
    name: "Check licenses with WhiteSource"

  - stage: publish
    script:
      - jabba use "adopt@1.8-0"
      - sbt -J-XX:ReservedCodeCacheSize=128m +publish
    name: Publish artifacts
  - script: eval "$(ssh-agent -s)" && cp .travis/id_rsa /tmp/id_rsa && chmod 600 /tmp/id_rsa && ssh-keygen -p -P "$DEPLOY_PASSPHRASE" -N "" -f /tmp/id_rsa && ssh-add /tmp/id_rsa && sbt docs/publishRsync
    name: Publish documentation

stages:
  - name: check
    if: NOT tag =~ ^v
  - name: test
    if: NOT tag =~ ^v
  - name: integration
    if: NOT tag =~ ^v
  - name: whitesource
    if: repo = akka/akka-management AND ( ( branch = master AND type = push ) OR tag =~ ^v )
  - name: publish
    if: repo = akka/akka-management AND ( ( branch = master AND type = push ) OR tag =~ ^v )

notifications:
  email:
    recipients:
      secure: "Jqrw+zGxVFNxdPioir+dYW5vur2DfnVmSnQnmgf93yjkYFUoyLjqEW0CPPK3srv5AgVZL8KMrCVDTm3890e1LvEcPudZS6eiPrS58cvmfoxHkqNZd2c3PUFH+zlBVsdW2nlue8NHmLIS2R1oZuy9+i/a00qqbvn4sUylDiFQLAXOctIB7lUdXl/pmXiAxS9W3wWRbQqA7V6PrOy38HEWSB1OdzVZ/+rompBTjff1LzMt67bZKIeAJj+T942tO9MOgbLJUq+HcLg6Pvk8Swm8FPXcmHkEl9tULaOKHOnSJyU+XDYy5hBc+ymOh1xH0iXCki73b/a4Av5zVzFX2XFDAIRgzlJdfWO/QMg4G9joJcn12ozyBzR13mlontDV3hR8zJaRqy6buwW3v2DgX7873NwrjkwCR8Zy5unIE3UIvnUU5wISN+RpMHF8T/Oqu4mEYGOSPxqgxIOOZvnEKbyckYT2BSl4cZdWtiUdgWPsvAwJmBIZeuBu5OailqbySO0R5P0AeXgD7ae9LOFNxXuhuLsC/F7+KfboYcmQgpJrrHvU8ySpFq0i8lxDY9ahc5sGQ3IJidMNrK76VSKt2yTJb0my4KzEaxAfFcRuxRS4JQ+J53b5GZXaQw+a8+ThI6D8Lb3kPILQcSrP8dAbnkaggrnn20KxlPx1hC1YHf9Gz6g="
    on_success: never
    on_failure: always

env:
  global:
    # encrypt with: travis encrypt WHITESOURCE_KEY=... --com
    - secure: "NrD8KdUpiq8wzxEH4EfiaxxBUHzBLmK8e7bD977gcUsvU2g+uUEaK8AiZiIBXf1cWfQCdqXfRom3ncj9h8DcaoLHjCQSdxTBtVmwxupL5KXS6rAOY61WrPbe2Cg6WW5J11aYT6pT+jXx58LjvRZsB4Tryl1UitnltMJWK/P+oipGbBdd9oR3GA5rLopCjuwozyjurlizwDCUbCOTaxc6w5Mv1S1b2+JnGjfApiex8ebhEnQlePBaDkOqHrnH9A58EhVYNclJNRkvu7mpBI6KcWJsBozHloSD20RWXiEF50bwuslBQLFBdsolo7jnYxQXRapgRKIukyFs1uhFr67t4pyHWXmbF5GrRa3jFCeAHLpH+Gcf2X43PN+K3kJm/FZQ1oNMKC/dHlhE2C9wwwMCSVorbJfuD6oTI/tee4ksCyZ9WWV+44ZFV1aIV5Dpx7hzeaQGkvDtQJK6tJEN5Tt4yP1rB9x4FC2KDugWaBUbnrFkGwiN9p7zXn/fhRRAsaDrZMeADNGMZ5tEPO+1kgOvvnBwpEwCT8si8k7SckOT1KnT2UnnA5xVzr9e1oUM6dBUECPfbsaTxjN2v9Y4TsyCt+qNsCiAvdKrDlRQEfcrbM6lm9mMSbaFSBfcThxrIRKAAh2oMc/jD0h15uWHzMO2+D6um4FtM0/WhXh//0dosJ0="
    # encrypt with: travis encrypt BINTRAY_USER=... --com
    - secure: "WfaoarV06fbA1e4/EtmsfEDWQk6OJ83lGwG8Q9gn5rDMSJL4qeqtyenI5B6DcFvLdamO2Otep90Dw8Ow9iF7rbycZJovvZjuZAESUZMV4Okjp+KMOlo3KmFCRhx+Fc3Ycy4IcvpcUS4xC/OzDXKjxhWEMaVhqixfj4NNR+A5HGpQocfna2ZmPJ0zEVdhx++/uhs5kf7LghmKeDwu9IeBnJgz6/ZFy3A7g2RHmkYK+V/jH45fxMY9BnbKfT4iKtfIQU2Mt8DlR+ucCwFWltPYr8ebdOPLtPcCmIigKMa1u/FKCvZknzIGpkivYi+6Jhyoqp80twdacn65fT71B6xKyabRsDEfHWHR0EXugodP/pRF0TtXDSFrI76T3iOYHI32LkzKfWv/TV7ZCLfrmN16Rrk+GGsS/KMbOZ915nJaEyc08IX3nrH/sI/etmFpPniHC/tVnyrPGBUkX9pOr7WQhWFzDQ63Z+BB8R+JnJa0g/vUcCE6gdnbh/0+lz4wTCamlBUDIwm30sMdozX3WSgIt4yRcQYyhcntxfqSkjYjrypLX7GQW//1ZJENPNTgwvKrXcuFoBtBnN2vqn4HlFoCZEsFzOVIdaJgv2boyKCC4jKCCYoP4L+w882X9nDHRotT8npov3/YBeLQSV2i67wcO245KJYgb8lP8qSXUhGxQns="
    # encrypt with: travis encrypt BINTRAY_PASS=... --com
    ## BINTRAY_PASS must be set to the <api_key> not the <password>
    - secure: "dqU4LsksI3HEDPAkqcthUPYFfJWO9y61jttyWL0XQJWZ9ZxNgzk3lgZ/tde6u1iYTeyhgbEf21/y809kdMLF3AaDeN4/1qH3gk62+kchQTo/BO2xRjDajWJiYSuTo0L5UCE1W9iKP18hhLoba95Wl0vsozq7rv7CyxYQ6poN7A44JjXeufrLzcLjS9zzgBXL5f+2Ot5Z/zda092Sb8i0KYZpaF6y0gq57unm5KgZZgvPIHR54qpattCEsWxEsfBqdYkYwXi1iVSnH7Zla6SolbmGW0cJqiVnUSZ65mEBMVQ+GVnS2xQsTZs1/vwXLV/pMJBOsdtdxPVRMQtn93ocC7UGTMJ650i7S3Z6vBvvE57fwJpn41+j0DvU9hM2XuFRtjPORdrNi7Wmss/RFvYtML+O0J8DvN65ywg1WgAKPSeceAMX3Jo5iD28aaORBoUhK8UHf6uqPl3epm+B5la3D4BTH2PwDmeH1BbXGsqh/4AyLerpHy2pZx+/c2/XESadX7xqkx4VqCyBVYX9Gvg96JrBDgvM9oWgfDkosi3QY1TO4Mfgze4W8Ow+w6z7XHx0iD/F06B2eui23tmFiGIbOcEijWyn4tSdQ94AjlCdKyIoePW067+6enlZGZeC2hswiF0BxYJXBw5iA3w1WdSPhtcUJKEGB9TKlavLWDb1+BI="
    # encrypt with: travis encrypt DEPLOY_PASSPHRASE=... --com
    - secure: "he7Rn+wqoIR3Tk+BLIRn3FHyoil6Ebgp/6jbxlz9RbK/nuvODN0m0X0O1zd2Xgc4HpOjeYlhp3pQuaFUlW1/mIIcectDrhWAO+YABFh+GhrP6hiW+e/M6aB8l4biU7dKCVIsXQ25r03ODbbJHwXonN8QveqHdTnnYwmyIGY6zuwcjaNcuu96hS3JAwWb+rJyzCq30ozgDcsO9EsEqiFIfgisTxB74JzNhnRQJbnWMR37qaJ1ygLZAAuVzqi1JrkzZNnn/Ob331GTQfko2ZzAte2DdNg6hdBOjeFmu2lSWa4u8ntf/0z2dua/VFI+S091JhxbPHsyXBks5whnGRWmLlq6vRjHZbkFlVea4zR3Q5pBjG3haqB1FxFCKsjjEW7vqUoVIzqkOSDfZOEvKv0N4I3GEkTJ9AMaufiXiS9i1Yr6l+hP9/sdhyJ6cQQhRsW/DumFDT5gDg9YjwE/rdklFFj3B6T4n2mrKsTxLZGpz/w5ikiE7eDGCIJJhuh8fVzsVS3H3hPk7qRo0SBvXvQugp9j80qowxIJfISjXDx9XrvNuIQioSFmBjo/RFQjevOgoZqM5iVm9FJnNrgtEOC4AtQkImxBIx7tmktukpO8nl7ouRjzb9yTeNgmLLOnV6nNxi1EV7FXWEFN43Q2Kmrrs3qXEFCLHP+pUvOe4rYuUoo="
