sudo: required
dist: xenial
language: scala

before_install:
  # make comparing to origin/master work
  - git remote set-branches --add origin master && git fetch
  # fetch full history for correct current and previous version detection
  - git fetch --unshallow
  # using jabba for custom jdk management
  - curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.1/install.sh | bash && . ~/.jabba/jabba.sh
  - jabba install adopt@1.8-0
  - jabba install adopt@1.11-0

script:
  - jabba use ${JDK:=adopt@1.8-0}
  - java -version
  - sbt -jvm-opts .jvmopts-travis "$CMD"

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt
    - $HOME/.jabba/jdk

before_script:
  - unset _JAVA_OPTIONS

jobs:
  include:
  - stage: test
    script:
    - jabba use "adopt@1.8-0"
    - git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH"
    - sbt -jvm-opts .jvmopts-travis ";scalafmtCheckAll;+test:compile;docs/paradox"
    name: "Compile on all Scala versions, check code style (fixed with `sbt Test/compile`)"

  - stage: test
    env: CMD="+test"
    name: "Run tests on AdoptOpenJDK 8 (all Scala versions)"

  - env:
    - JDK="adopt@1.11-0"
    - CMD="+test"
    name: "Run tests on AdoptOpenJDK 11 (all Scala versions)"

  - script: ./scripts/setup-minikube-for-linux.sh && ./integration-test/kubernetes-api/test.sh
    env: K8S_API

  - script:
    - ./scripts/setup-minikube-for-linux.sh
    - ./integration-test/kubernetes-dns/test.sh
    env: K8S_DNS

  - script: ./scripts/setup-minikube-for-linux.sh && ./integration-test/kubernetes-api-java/test.sh
    env: K8S_API_MAVEN

  - stage: whitesource
    script:
      - jabba use "adopt@1.8-0"
      - git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH" && sbt 'set credentials += Credentials("whitesource", "whitesourcesoftware.com", "", System.getenv("WHITESOURCE_KEY"))' whitesourceCheckPolicies whitesourceUpdate
    name: "Check licenses with WhiteSource"

  - stage: publish
    script:
      - jabba use "adopt@1.8-0"
      - sbt -J-XX:ReservedCodeCacheSize=128m +publish
    name: Publish artifacts
  - script: eval "$(ssh-agent -s)" && cp .travis/id_rsa /tmp/id_rsa && chmod 600 /tmp/id_rsa && ssh-keygen -p -P "$DEPLOY_PASSPHRASE" -N "" -f /tmp/id_rsa && ssh-add /tmp/id_rsa && sbt docs/publishRsync
    name: Publish documentation

stages:
  - name: check
    if: NOT tag =~ ^v
  - name: test
    if: NOT tag =~ ^v
  - name: whitesource
    if: repo = akka/akka-management AND ( ( branch = master AND type = push ) OR tag =~ ^v )
  - name: publish
    if: repo = akka/akka-management AND tag =~ ^v
  
env:
  global:
    # encrypt with: travis encrypt WHITESOURCE_KEY=...
    - secure: "KK7AsqpqUBRl3vnPzVfmlfogl/HMq7Xb2t6EHHB9pi8QWmK25ufPAxF6G+vx0mIAAP7r6n/lkdVBnuZC1jp6G1/I4adsXJOkCF6YTSb9XmH9jK+YhI6xuqFx5vRqxb2faK+6VY6IJXQFD8/1gkdVr0hN3Hq4I5Yg0GAUxAaKKNWeh7VsFmrFiMCj7Q8s2U4+aGSgyKnptQ35JV63SPZV0rgPPIv1kZuqLi526fQMwOIfhpaRh763v7wgINJjZhvAjIbpicGmayZSnZPhs0+Z/jh9pK8sja1S+dUJSEe4IIfGMJINko58fKNPrxaenk05pwTJ+pWKmYWwxyEIiJrTkNHHUnXYCaJf7Qfiyv+sdZ9opGTs0xXS+/kaI9WPQ/vToyMTSjhZnCx0D9vJMuIVDM0OD+1GO66LqdBWK5nC+tgSstf79HK0gZP7hLzhxNj+4mXajECBlg+GucN6wmhrUB2UMGZ6/NvfIdzuXFFQCuSf3Hp+4z7yDV+FgqZeiedLLlZrvaE0IKrNaJ1CfzZ8jIzhjYXFFG9ERMeyGp7n8/7LW2NcHOI+BvKcaNOV4umRXWcXh7mQqzmZ+t3t+4IQFCR1lTrYj59KA4UI2Z9viZBefwIll1X2UNJ2uzbcCqdQSNrTi8LPfuqU39hdxYcw69it7K55Ktah6qiFwKpPlUc="
    # encrypt with: travis encrypt BINTRAY_USER=...
    - secure: "O7Mub2EGDXp9iGFVClSN+C35gxTEEaew9elPl074FCtm1DAqIIK6FyLhs0OJY+pcSGopVzkDB+4aVF1xVDGmbtmiTg3hpoer94rJxellUxK+N+tMaYElqJWjbnSkk9cqOR1i0x935jvImi7lJsDBfwZR7BVFzXw9jvF+V9Ebtao2QmL1Zr89lV84kZHMJg2bTlfibpDUfy50Oq+/GMiEdQmSbM3JHvMyLW1LqOd2b73FT8aOu1UnY3U3jzFaBzV0g0tcyt+DvvHOXjw6+UxOtg4PvrtsG2Qf6Lfd4sTje3WoXezzYGYjoSavhYMw3OLnp6G5BTj4161k6tiHe5xNefEXyEJO4IHjCbXeEIsSUV/gcuMQiNjYhwG86Flc26tkfTR/Jgw15P/wr7mE4ZFdaOhGmh+nHegHKMJL8hJYVn8PNGVaJC8bCWPUmkgkV5eKjQ9pLdMUjiG6Y7x1ZuJvUdzsTBdxtntQuzST/h5BfGwwMMkiVySYV5UB5jJei3LLkFTV6eLF+jvcG0ejvZ+yol6yFbcwexJPpJBXSLMWZtJynZPxlU1+PDF4nG+82pBldBn5nyJVWgzefQrK1jlzXdWUpUcMg4FT1HSLp+auZ3P31dzeAjROkyeCQMBb4E87uCJoo96k9LUPlV7wyfWe3RH863G9VWZT2QmuZaQqumo="
    # encrypt with: travis encrypt BINTRAY_PASS=...
    - secure: "KpMo4cxeepyMilzQzfueZAlUbFrjjEmkf7Vm2QM2L31tqJzT0cRrw7LHorAxOg+XJmdmymP+NQ9+rkB/ydX78elDhh91LqXaxfhXRgrTtgHb52tBwpOXqibLCVEk9fsF37GXHXcqWjDrC4QCgx8XoBUKkFzhYZNqosobLgwr9lqvVnWh9UPWn0/lLnkiHeCly87lB13H0HMKWNfk/XyPMIcYeGa0AHsingBMNCbP3puHLmkpgYdd5j0YBHtuacLRAJB2FMrzqXTgljFZWpbOKUmzR5THeUALU1Tcszs6fqCEYhzcDFsAcFIFJyf4ZwySIXV615jSye/iCQBFYZ4ioXQDwXRhq4zGXPNSrp7tvudZj7k6viJKayE9ilqvaB28ff0WUK27rGhrFfRp500jZAdZxa5jgKEI9n1Ao3TBZi+NLF58T1tOmrNR57F043oBcyOCpPa8nIDsWMSWyTGLgHncPdiofWkOzbVLUPO+siapP0Wtr+FpNc+z98wYIthiVyoCqewV5qth+5imXSD2wkS/cOb2oulXejogQEv4b8kT5yPkiRybHnBUjwJE5MDKalhVghMV6B+UKMsvbS+Lp+FsE8YzGKGctvWth5OOIsdzm5zlivBFtpPQmNK886n1DxBpbTn9hbX+/1IKWW/UUwcwItUhTWA5tZ08r/72g00="
    # encrypt with travis encrypt DEPLOY_PASSPHRASE=...
    - secure: "b+Ebc6lF+UrBARfluuzZtD5spctrElFfLfIoi6KAd7RNDtWzo8KZFlkVx9YZEk50Lp58fKZG3hlnl6AXedmwb36/xbR+V6vC891VmbEMmjMRcoAoX5DS1/dqBfs7AqU/sa0EvOc+fbNuLE79TGOJED4lO7t94OMCOvlEBpwTdGNV1qMpHUZbEl90iMvGUlUv0NiuAru6rakyB9DGw2ah+MQZWzbZM0vrRQP9rpDmPbGw0uk5dTT9+FBrPE3KQ8KPr8qaBcajAVvMxFoxwHKIdbMKJABZfpCAjoxV0VFjMWUkxhNZKGC3sGrZfZEbTRMu3XhdZkJBOx/ZivdcyorFFmB8F3HWO+65I5rHvf/9lRRWUcHYxeoBaV1wdSaJvaqbJUUFULeZwWXRcziiY4MUlOw+YPzkat4UYSDnYHAjb0K3UuE2pN58WPEOXrz88sytm15Tt9xfgbMHNwxaqPT6+ZufHazPRlz2SAGygk73Q/3gJc7mekkatT5NGrOneLLzwIXZfYyCzgUi6vqUpUHvncmey3BDInseisRikd8YA5tetLX2WubjWRmsJfNo7DZCfWutKjegNWGP9x0XpRm6mXyIys0VhLkMAJ7Bkp24rUhk2w9R2sk37xU9VR9vnpxhzXcGI5BFjqC09WSe7FiqnJ/2nbgb5d/MuPk78CS0xZQ="
