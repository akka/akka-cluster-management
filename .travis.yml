sudo: required

language: scala

scala:
  - "2.12.2"
  - "2.11.11"

jdk:
  - oraclejdk8

before_script:
  # Download things necessary for the various integration tests
  # AWS tools (necessary for the aws-api-ec2-tag-based integration test)
  - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
  - unzip awscli-bundle.zip
  - ./awscli-bundle/install -b ~/bin/aws
  - export PATH=~/bin:$PATH
  # Download kubectl, which is a requirement for using minikube.
  - export CHANGE_MINIKUBE_NONE_USER=true
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.8.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - sudo minikube start --vm-driver=none --kubernetes-version=v1.8.0
  # Fix the kubectl context, as it's often stale.
  - minikube update-context
  # Wait for Kubernetes to be up and ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
  
before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot

script:
  # make 'git branch' work again
  - git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH"
  - sbt -J-XX:ReservedCodeCacheSize=128m ++$TRAVIS_SCALA_VERSION ";test:compile;docs/paradox"
  - git diff --exit-code --color || { echo "[error] Unformatted code found. Please run 'test:compile' and commit the reformatted code."; false; } && sbt -J-XX:ReservedCodeCacheSize=128m ++$TRAVIS_SCALA_VERSION ";test"
  # check policies, if on master also upload
  - if [[ "$TRAVIS_SECURE_ENV_VARS" == "true" ]]; then if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_EVENT_TYPE" == "push" ]]; then sbt 'set credentials += Credentials("whitesource", "whitesourcesoftware.com", "", System.getenv("WHITESOURCE_KEY"))' whitesourceCheckPolicies whitesourceUpdate; else sbt 'set credentials += Credentials("whitesource", "whitesourcesoftware.com", "", System.getenv("WHITESOURCE_KEY"))' whitesourceCheckPolicies; fi; fi
  # Create example Redis deployment on Kubernetes
  - kubectl cluster-info 
  - kubectl run travis-example --image=redis
  - kubectl get deployment
  - ./aws-api-ec2-tag-based.sh

deploy:
  provider: script
  script:
    - sbt -J-XX:ReservedCodeCacheSize=128m ++$TRAVIS_SCALA_VERSION publish && curl -I https://ci.lightbend.com/job/techhub-publisher/build?token=$TECH_HUB_TOKEN
  on:
    tags: true
    repo: akka/akka-management

env:
  global:
    # encrypt with: travis encrypt WHITESOURCE_KEY=...
    - secure: "KK7AsqpqUBRl3vnPzVfmlfogl/HMq7Xb2t6EHHB9pi8QWmK25ufPAxF6G+vx0mIAAP7r6n/lkdVBnuZC1jp6G1/I4adsXJOkCF6YTSb9XmH9jK+YhI6xuqFx5vRqxb2faK+6VY6IJXQFD8/1gkdVr0hN3Hq4I5Yg0GAUxAaKKNWeh7VsFmrFiMCj7Q8s2U4+aGSgyKnptQ35JV63SPZV0rgPPIv1kZuqLi526fQMwOIfhpaRh763v7wgINJjZhvAjIbpicGmayZSnZPhs0+Z/jh9pK8sja1S+dUJSEe4IIfGMJINko58fKNPrxaenk05pwTJ+pWKmYWwxyEIiJrTkNHHUnXYCaJf7Qfiyv+sdZ9opGTs0xXS+/kaI9WPQ/vToyMTSjhZnCx0D9vJMuIVDM0OD+1GO66LqdBWK5nC+tgSstf79HK0gZP7hLzhxNj+4mXajECBlg+GucN6wmhrUB2UMGZ6/NvfIdzuXFFQCuSf3Hp+4z7yDV+FgqZeiedLLlZrvaE0IKrNaJ1CfzZ8jIzhjYXFFG9ERMeyGp7n8/7LW2NcHOI+BvKcaNOV4umRXWcXh7mQqzmZ+t3t+4IQFCR1lTrYj59KA4UI2Z9viZBefwIll1X2UNJ2uzbcCqdQSNrTi8LPfuqU39hdxYcw69it7K55Ktah6qiFwKpPlUc="
    # encrypt with: travis encrypt BINTRAY_USER=...
    - secure: "aV03M2fhMugeGddRWpVHmY1v82mC1uF1uivyeHKNzEPKSYKWpHbiK9hx2RDY6dSccBURFIIkpzzGYCAyJa7AnDsvUy/voyscDZo0/cCbC2gMz5pTB0MpuzTnBPTbjzl4E8JNRryBszdMn7SXCRL9JTyrQLe9JS/XxQvv5ZBYXYg1A68Xa+RaIJkODzkzpD31ITnSpqtRUv1j2h/VqLIvVT03av4AOmq2In4WSQDmBj8Eq0enYPvQ9kLgeQ13zew2nOT0WL7Src+HO9BMwifdpih1kXw0qYs/rJMGwZOw2ksHjxZqO8BGHIxqcRo+wZnUDgK4S5SFSumPatdqFJeAegHV2TNSm6DPDcPxitl0oHkopHF+wCvSX+vv/VFwTATJy+gAi2L8X0D1XxjPz2V/CbDXsiPA6p7uE6YVmcnGe3pnx5jJCWduBr7O2g9ggUqtkNAYYeqb26zIZN2eEjBAmYeEC/B5HMLW8WcanRioDFA/pp4r7ilIBBuQ4AmRN3aaN8+N/a95NBuwbnP8wFqErNYwfV1Bqa576AuPF5sVCHgvmXDkrYshmbkuqjoJxtRhKMbyX9sbIJ1mah20b9k+3sndwh73zKPb3r8eF8ozxlLohPNOYshl6LFJRFRKMSK4fJ6y9lYgHZhYWSWcHACxGI90QCPWesSWTMfNwRM0Sno="
    # encrypt with: travis encrypt BINTRAY_PASS=...
    - secure: "YgwDYNlmCsGCtmf+Avm0TwkqsvaAVWsYilTRdsI/h1OEwn80j9F63QSF0qIg1qzGP9dNFA8VyS5gDgF8yMH0GwIa8a8kI8PXbRB3fH0jWjFGfMoJ+LKyG2MKIvdAMdqs5nVhARSjEajEDbjd7Azk32mSymc4ZSwxLr8yYR75pdfaIH+s4famoaHpUcwKxbd6fg2QY/ny5uckwcZwyu+y1+V0/i4ej0Btr82jtDnqRcIMyH+Fo35xVzosNiLD8s7faYfRoVaywcbjTSVr8TsonXRFKiaMBCbSs36GhHuC3IWzqXSnVwGIJ2eYkSoIwm9Qbg55UbpOUnPFPO9EHsg5jxXO4MxjPcl5ofipdBKWL6uYfq6Q5rzSRv8aJafMes6L87/YKeyDxel0BGcik7mLxNpuVjJ2RnYodN0KKGBO2PZhx4WErfieEsW2zz2TTZUxvMO2SCgzr1HUpRpWQmwlVnyI+q/U0bKAFmcGezHiGoXGp4zDZxwDE3LcZiriDa4M5qJLjHH5hGnU/FHBXDYygCPJyahgb7GjW+IZ8OaDhF19SJYgVqfw//c09pODDSAdKq4ae0cnM/c+vjzdaS/T93LCHKU7mlCRZmiG13Om9tK/WupUVAYNCjr86Pdqj8+pmTHzU2EG0RvzdHlQa4S6Xy97G2ZsJ+C9fvt+Glr/yPA="
    # encrypt with travis encrypt TECH_HUB_TOKEN=...
    - secure: "Ou3Hcn2WCz2YAP5gcG4k6zmLx8ZlolW9m2RxgV0mpMyN5gUhECVI+21HtxasvfBWHTKmCcfOLs9sZhoFq2kxTvTsNNFTfcDB2wwqg6dCEzmzop+oZLcNRmYfCJA7+8MOiwunK/GvSPwnbcy2o2ZYrIj3z9q1Qv8Nztsz6BO5ceMWmP28sJwnlzved/n3UipD9/jmTLIRthkolnvqcWCbXq+XLss20VukQYcj59KB7+HEpeTdy7ism5ndnIR7oW8F+aDA6hrrk0oKNpWwBqBzFvRCoqVbAKEJ+amO4qo0EjgBpx1m8E4ANatEsTGiL2QLiJvM7JQ4rIw2JRf+oB2UvCAS2jHYuzhYk8GvTmawbv9/U1D3fBc2huh3kcC5ggs8O92Zoa/QyDrjcuSzJdSj8aGQguUlGqnT76KezechT66SUdz/bgCXbppTTh1qPSUcP5G1wyc6+/0an4u3gmsnoDo6dtTM8rOxAJ+QtcxSo9b50n2YDQqmBN+JVzqvC2GwfORvAIE+h6KIS45v7l5/PN5KPuPut2Y6GZ8dJUKVGeeTNqxRk5SE1H7/oPM3dmN62nl5H15uP1pPopchvYaQ+qANwAFa1RQxxOWX9ImnSkogFB3R0Vy7Yw1bQRsst/LDUFBbm8C1KB4Dr+2HP/JwGpXvKxhBymDDDPZCqRETNPA="
    # encrypt with travis encrypt AWS_ACCESS_KEY_ID=...
    - secure: "X2w8kk/cCgAeUm+msdhDnOysXt1MeAvFXWmredDhw+s6wyS6wh6Yf7J7RfZ/LfBp/qiA+j94m2PTMgoZzSKKXzLVl9DcFafmVqznNGMkTpN4x5YgmQGDDmd6YJ/ylXsQr13tK7pjh5UPPcSPGPWMaiX5Szf0eKBe8V2SgHwDRLZx4hsdnmuQQPwzEEUErlkM6fYH+wt5fkD0rHIbau3o6ecQRbGU9j9NThw7xJRjeM+yw+wTgElXOeL7gfxzdRcp15wP0hAlTKDQHYXJPoa1bYgXpkdBjioHyzFc0YHRNcSvGsPIgO2umsr0++rIW8wXyhwntflPn7Fo2CZVSKADHU4Pt9sAR4fkHxX49eDm84/69Kc2d43Qo1xEgY7q4UD2HH3OGgKrfixiZWFehvCZeWiLaXiYjwTsoiVlVuGrUWTd1JWzlO6zXxh5dmB+2sat6RsHrVLnnuENdOyVibHfixlKRdIlUvp8joAQj7Mfkxi/m2X7+onNMqXmo17aAWFXa7yRu/IcUaT+7FQ2Vq8niuTk8xYiEwyyux1PkFEtbz0SNpR/vBtPkE00s/xHtdVPKmF4HLRyldW0us1H/gcvg9USI0CEeTVU6OpmxHInFIFlEzbrxjhF9QLahxCItH0yHMbxYUirUlxmuy2gdxho/ju0vqOK82PF66c5PGg3IyY="
    # encrypt with travis encrypt AWS_SECRET_ACCESS_KEY 
    - secure: "JVG/kbm9Y9AkFFqq98uLBhvEMP4sXR0Gmj4iLe3pcAADlVay6kFJPimVyky+H23nkZsD6MnTHZjwcvmUhQ8lNl6TSpUrQZm7u/PPXlJp3vRVwKKT59cybxhmLthZAQjyJLa6F00cI3Gmfw7c1wp9AHgMoEVk31p1I22Q2G3ZDMTvfDsZ3MOsfkEnYLEWyKEWASs9D5ZmSpXV2Rbh113M65cdK+sfo7oDODRTrLSJ4LUhjzXXJsyeIHusN9V0/PlYvlDx7iErHN0kMWncIRd/DZ+rWMqgK6vrY4liz4hed6KnXsgk2oIxRyEQjtFQVft+XvkaBTX904AL5WdsJAFFMPordk4PNi9siM1pozBVxr+4R84zySQUOPIajm1wxMmuZvfOkkq1yrMbU5rIj8JDYX9mta7ZGYFGNfzLDg4JQs7OJE91uTmc8bWpiTLNmyMhLGvZ9t5mHlhogarYQUhHNbUFEe35glTyfjcgCCw0Em65E98Qj1PeDDH3TxLMdv8uMyLL+T23d1fj+oJX6o6P7MAtoaI07HVWh4aH5pMCKF5XuIdXdYQEijdyVwII+SYfK6+iAot7Of4Uoh0XW3cAAXFDwhUP6B/EDI9Wld5Sw8y7JTTOh+Lq/4dgmO00BZPgF4hbEFAnP1jaV3uOyTP6NRReWFDS6/sTvbrobk+4dc8="
